server:
  port: 9000
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
  shutdown: graceful

spring:
  application:
    name: cns-edge-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s
  session:
    redis:
      namespace: cns:edge
    timeout: 10m
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      request-connect-timeout: 5000 # 5s
      request-read-timeout: 5000 # 5s
      fail-fast: false # In production, set to true
      retry:
        max-attempts: 6
        initial-interval: 1000 # 1s
        max-interval: 2000 # 2s
        multiplier: 1.1
    gateway:
      httpclient:
        connect-timeout: 2000
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s

      routes:
        - id: catalog-route
          uri: ${CATALOG_SERVICE_URL:http://localhost:9001}
          predicates:
            - Path=/books/**
          filters:
            - name: CircuitBreaker
              args:
                name: catalogCircuitBreaker
                fallbackUri: forward:/catalog-fallback
            - RewritePath=/(?<segment>/?.*), /api/v1/$\{segment}
        - id: order-route
          uri: ${ORDER_SERVICE_URL:http://localhost:9002}
          predicates:
            - Path=/orders/**
          filters:
            - RewritePath=/(?<segment>/?.*), /api/v1/$\{segment}
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker

      default-filters:
        - SaveSession
        - name: RequestRateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 10
              burstCapacity: 20
              requestedTokens: 1
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
#            statuses: INTERNAL_SERVER_ERROR
            exceptions: java.io.IOException, java.util.concurrent.TimeoutException, java.net.ConnectException
            backoff:
              firstBackoff: 50ms
              maxBackOff: 500ms
              factor: 2
              basedOnPreviousValue: false



logging:
  level:
    inc.evil: debug
    org.springframework.cloud.gateway: debug
    org.zalando.logbook: trace
    io.github.resilience4j: DEBUG
resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 20
        permitted-number-of-calls-in-half-open-state: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 15000
  timelimiter:
    configs:
      default:
        timeout-duration: 5s
